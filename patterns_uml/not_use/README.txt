

Паттер который точно не стоит применять в моём приложении это Singleton. На это есть такие причины как:
    - синглтон нарушает SOLID, а именно Single Responsibility Principle.Согласно этому правилу, каждый класс должен
      отвечать лишь за один какой-то аспект. Совершенно очевидно, что любой Singleton-класс отвечает сразу за
      две вещи: за то, что класс имеет лишь один объект, и за реализацию того,
      для чего этот класс вообще был создан.

    - Скрытые зависимости
        Обычно, если классу нужно что-то для работы, это сразу понятно из его методов и конструкторов.
         Когда очевидно, какие зависимости есть у класса, гораздо проще их предоставить. Более того,
         в таком случае вы можете использовать вместо реально необходимых зависимостей заглушки для тестирования.
         Если же класс использует Singleton, это может быть совершенно не очевидно. Всё становится гораздо хуже, 
         если экземпляру класса для работы необходима определённая инициализация
         (например, вызов метода init(...) или вроде того). Ещё хуже, если у вас существует несколько Singleton’ов,
         которые должны быть созданы и инициализированы в определённом порядке.